{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","addItem","bind","handleInput","preventDefault","newItem","this","setState","Date","now","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA2BeA,MAtBf,SAAmBC,GACjB,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAC1B,OAAO,qBAAKC,UAAU,OAAf,SACL,8BACE,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC5DZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAEtC,+BACE,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAAQC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAN3DJ,EAAKI,QAYzC,OAAM,8BACJ,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACGlB,O,eChBPmB,IAAQC,IAAIC,K,IA8EGC,E,kDA3Eb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXtB,MAAO,GACPuB,YAAa,CACXf,KAAM,GACNF,IAAK,KAGT,EAAKkB,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZA,E,2CAenB,SAAQf,GACNA,EAAEiB,iBACF,IAAMC,EAAUC,KAAKP,MAAMC,YAC3B,GAAoB,KAAjBK,EAAQpB,KAAa,CACtB,IAAMR,EAAK,sBAAO6B,KAAKP,MAAMtB,OAAlB,CAAyB4B,IACpCC,KAAKC,SAAS,CACZ9B,MAAOA,EACPuB,YAAa,CACXf,KAAM,GACNF,IAAK,S,yBAMb,SAAYI,GACVmB,KAAKC,SAAS,CACZP,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAKyB,KAAKC,W,wBAKhB,SAAW1B,GACT,IAAM2B,EAAgBJ,KAAKP,MAAMtB,MAAMkC,QAAO,SAAAhC,GAAI,OAChDA,EAAKI,MAAQA,KACfuB,KAAKC,SAAS,CACZ9B,MAAOiC,M,uBAIX,SAAUzB,EAAMF,GACd,IAAMN,EAAQ6B,KAAKP,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAQA,IACdJ,EAAKM,KAAOA,MAGhBqB,KAAKC,SAAS,CACZ9B,MAAOA,M,oBAIX,WACE,OACE,qBAAKG,UAAU,MAAf,SACE,mCACE,uBAAME,GAAG,aAAa8B,SAAUN,KAAKL,QAArC,UACE,uBAAOpB,KAAK,OAAOgC,YAAY,aAAa7B,MAAOsB,KAAKP,MAAMC,YAAYf,KAAMC,SAAUoB,KAAKH,cAC/F,wBAAQtB,KAAK,SAAb,oBAEF,4BAAIyB,KAAKP,MAAMtB,MAAMQ,OACrB,cAAC,EAAD,CAAWR,MAAO6B,KAAKP,MAAMtB,MAAOe,WAAYc,KAAKd,WAAYJ,UAAWkB,KAAKlB,qB,GArEzE0B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb62c1a0.chunk.js","sourcesContent":["import React from 'react';\nimport './ListItems.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move';\n\nfunction ListItems(props) {\n  const items = props.items;\n  const listItems = items.map(item => {\n    return <div className=\"list\" key={item.key}>\n      <p>\n        <input type=\"text\" id={item.key} value={item.text} onChange={(e) => {\n          props.setUpdate(e.target.value,item.key)\n        }}/>\n        <span>\n          <FontAwesomeIcon className=\"faicons\" icon=\"trash\" onClick={() => props.deleteItem(item.key)}/>\n        </span>\n      </p>\n    </div>\n  })\n\n  return<div>\n    <FlipMove duration={300} easing=\"ease-in-out\">\n      {listItems}\n    </FlipMove>\n  </div>;\n}\n\nexport default ListItems;\n","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item =>\n      item.key !== key);\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key === key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter task\" value={this.state.currentItem.text} onChange={this.handleInput}></input>\n            <button type=\"submit\">Add</button>\n          </form>\n          <p>{this.state.items.text}</p>\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}